import React, { useEffect, useState } from "react";

const App = () => {
  const [env, setEnv] = useState({
    hasWindowTelegram: false,
    hasWebApp: false,
    initDataUnsafe: null,
    userAgent: "",
    href: "",
  });

  const [user, setUser] = useState(null);

  useEffect(() => {
    const hasWindowTelegram = typeof window !== "undefined" && !!window.Telegram;
    const hasWebApp = !!window.Telegram?.WebApp;
    const initDataUnsafe = window.Telegram?.WebApp?.initDataUnsafe ?? null;

    setEnv({
      hasWindowTelegram,
      hasWebApp,
      initDataUnsafe,
      userAgent: navigator.userAgent,
      href: window.location.href,
    });

    if (hasWebApp) {
      window.Telegram.WebApp.ready();

      if (initDataUnsafe?.user) {
        setUser(initDataUnsafe.user);
        window.Telegram.WebApp.MainButton.setText("–ì–æ—Ç–æ–≤–æ ‚úÖ");
        window.Telegram.WebApp.MainButton.show();
      }
    }
  }, []);

  return (
    <div className="min-h-screen p-6 bg-white text-black">
      <h1 className="text-2xl font-bold mb-4">üì± Telegram Mini App</h1>

      {user ? (
        <div className="mb-6 space-y-1">
          <h2 className="text-lg font-semibold">üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</h2>
          <p>–ò–º—è: {user.first_name} {user.last_name}</p>
          <p>–Æ–∑–µ—Ä–Ω–µ–π–º: @{user.username}</p>
          <p>ID: {user.id}</p>
          <p>–Ø–∑—ã–∫: {user.language_code}</p>
        </div>
      ) : (
        <div className="mb-6 text-red-600">
          <p>‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.</p>
          <p>–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ Mini App –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ Telegram.</p>
        </div>
      )}

      <div>
        <h2 className="text-lg font-semibold mb-1">üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è:</h2>
        <pre className="bg-gray-100 text-sm p-3 rounded overflow-auto">
          {JSON.stringify(env, null, 2)}
        </pre>
      </div>
    </div>
  );
};

export default App;
