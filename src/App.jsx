import React, { useEffect, useState } from 'react';

const App = () => {
  const [tg, setTg] = useState(null);
  const [user, setUser] = useState(null);
  const [theme, setTheme] = useState('light');
  const [isInTelegram, setIsInTelegram] = useState(false);
  const [debugData, setDebugData] = useState({});

  useEffect(() => {
    const telegram = window.Telegram?.WebApp;

    setDebugData({
      hasWindowTelegram: !!window.Telegram,
      hasWebApp: !!telegram,
      initDataUnsafe: telegram?.initDataUnsafe || null,
    });

    if (!telegram || !telegram.initDataUnsafe?.user) {
      setIsInTelegram(false);
      return;
    }

    telegram.ready();
    setIsInTelegram(true);
    setTg(telegram);
    setUser(telegram.initDataUnsafe.user);
    setTheme(telegram.colorScheme || 'light');

    telegram.MainButton.setText('üëç –ì–æ—Ç–æ–≤–æ');
    telegram.MainButton.show();
  }, []);

  return (
    <div className={`min-h-screen p-6 ${theme === 'dark' ? 'bg-gray-900 text-white' : 'bg-white text-black'}`}>
      <h1 className="text-2xl font-bold mb-4">üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–µ–¥—ã</h1>

      <div className="mb-6">
        <p><strong>üõ† –ó–∞–ø—É—â–µ–Ω–æ –≤ Telegram:</strong> {isInTelegram ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}</p>
      </div>

      <div className="mb-6">
        <h2 className="text-xl font-semibold mb-2">üì¶ –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</h2>
        <pre className="bg-gray-100 text-black p-2 rounded shadow overflow-x-auto text-sm">
          {JSON.stringify(debugData, null, 2)}
        </pre>
      </div>

      {user && (
        <div>
          <h2 className="text-xl font-semibold mb-2">üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</h2>
          <p><strong>–ò–º—è:</strong> {user.first_name} {user.last_name}</p>
          <p><strong>–Æ–∑–µ—Ä–Ω–µ–π–º:</strong> @{user.username}</p>
          <p><strong>–Ø–∑—ã–∫:</strong> {user.language_code}</p>
          <p><strong>ID:</strong> {user.id}</p>
        </div>
      )}
    </div>
  );
};

export default App;
