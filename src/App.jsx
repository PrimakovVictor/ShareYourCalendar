import React, { useEffect, useState } from 'react';

const App = () => {
  const [user, setUser] = useState(null);
  const [theme, setTheme] = useState('light');
  const [isTelegram, setIsTelegram] = useState(false);

  useEffect(() => {
    const telegram = window.Telegram?.WebApp;

    if (!telegram) {
      console.warn('‚ùå WebApp –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω. –ù–µ –≤ Telegram?');
      return;
    }

    telegram.ready();
    setIsTelegram(true);
    setUser(telegram.initDataUnsafe?.user || null);
    setTheme(telegram.colorScheme || 'light');

    telegram.MainButton.setText('üëç –ì–æ—Ç–æ–≤–æ');
    telegram.MainButton.show();
  }, []);

  if (!isTelegram) {
    return (
      <div className="min-h-screen flex items-center justify-center text-center p-4 text-lg bg-red-50 text-red-800">
        –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–Ω—É—Ç—Ä–∏ Telegram üì±
      </div>
    );
  }

  return (
    <div className={`min-h-screen p-6 ${theme === 'dark' ? 'bg-gray-900 text-white' : 'bg-white text-black'}`}>
      <h1 className="text-2xl font-bold mb-4">–ü—Ä–∏–≤–µ—Ç, Telegram Mini App üëã</h1>

      {user ? (
        <div className="space-y-2">
          <p><strong>–ò–º—è:</strong> {user.first_name} {user.last_name}</p>
          <p><strong>–Æ–∑–µ—Ä–Ω–µ–π–º:</strong> @{user.username}</p>
          <p><strong>–Ø–∑—ã–∫:</strong> {user.language_code}</p>
          <p><strong>ID:</strong> {user.id}</p>
        </div>
      ) : (
        <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏ –≤ Telegram üôÉ</p>
      )}
    </div>
  );
};

export default App;